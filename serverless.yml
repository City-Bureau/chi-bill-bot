service: chi-bill-bot

provider:
  name: aws
  runtime: go1.x
  stage: ${opt:stage, 'dev'}
  region: us-east-2
  environment:
    TWITTER_CONSUMER_KEY: ${ssm:/${self:provider.stage}/${self:service}/twitter/consumer-key}
    TWITTER_CONSUMER_SECRET: ${ssm:/${self:provider.stage}/${self:service}/twitter/consumer-secret}
    TWITTER_ACCESS_TOKEN: ${ssm:/${self:provider.stage}/${self:service}/twitter/access-token}
    TWITTER_ACCESS_SECRET: ${ssm:/${self:provider.stage}/${self:service}/twitter/access-secret}
    RDS_DB_NAME: ${ssm:/${self:provider.stage}/${self:service}/db/name}
    RDS_USERNAME: ${ssm:/${self:provider.stage}/${self:service}/db/user}
    RDS_PASSWORD: ${ssm:/${self:provider.stage}/${self:service}/db/password}
    SNS_EMAIL: ${ssm:/${self:provider.stage}/${self:service}/sns/email}
  tags:
    project: chi-bill-bot
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sns:Publish
      Resource:
        - Ref: SNSTopic

package:
  exclude:
    - ./**
  include:
    - ./bin/**

plugins:
  - serverless-dotenv-plugin
  - serverless-plugin-aws-alerts

custom:
  topicName: ${self:service}-${self:provider.stage}-events
  AURORA:
    DB_NAME: ${ssm:/${self:provider.stage}/${self:service}/db/name}
    USERNAME: ${ssm:/${self:provider.stage}/${self:service}/db/user}
    PASSWORD: ${ssm:/${self:provider.stage}/${self:service}/db/password}
    HOST: ${ssm:/${self:provider.stage}/${self:service}/db/host}
    PORT: ${ssm:/${self:provider.stage}/${self:service}/db/port}
  vpc:
    securityGroupIds:
      - ${ssm:/${self:provider.stage}/${self:service}/vpc/security-group/id}
    subnetIds:
      - ${ssm:/${self:provider.stage}/${self:service}/vpc/subnet/a}
      - ${ssm:/${self:provider.stage}/${self:service}/vpc/subnet/b}
  alerts:
    stages:
      - prod
    alarms:
      - functionErrors
    topics:
      alarm:
        topic: ${self:service}-${self:provider.stage}-alerts-alarm
        notifications:
          - protocol: email
            endpoint: ${ssm:/${self:provider.stage}/${self:service}/sns/email}

functions:
  migrate:
    handler: bin/migrate
    timeout: 120
    environment:
      RDS_HOST: ${self:custom.AURORA.HOST}
    alarms:
      - functionErrors
    vpc: ${self:custom.vpc}
  query_mentions:
    handler: bin/query_mentions
    timeout: 120
    environment:
      SNS_TOPIC_ARN:
        Ref: SNSTopic
    alarms:
      - functionErrors
    events:
      - schedule: rate(10 minutes)
  handle_tweet:
    handler: bin/handle_tweet
    timeout: 300
    environment:
      SNS_TOPIC_ARN:
        Ref: SNSTopic
      RDS_HOST: ${self:custom.AURORA.HOST}
    alarms:
      - functionErrors
    vpc: ${self:custom.vpc}
    events:
      - sns:
          arn:
            Ref: SNSTopic
          topicName: ${self:custom.topicName}
          filterPolicy:
            feed:
              - handle_tweet
  post_tweet:
    handler: bin/post_tweet
    timeout: 120
    environment:
      SNS_TOPIC_ARN:
        Ref: SNSTopic
    alarms:
      - functionErrors
    events:
      - sns:
          arn:
            Ref: SNSTopic
          topicName: ${self:custom.topicName}
          filterPolicy:
            feed:
              - post_tweet
  save_bill:
    handler: bin/save_bill
    timeout: 120
    environment:
      SNS_TOPIC_ARN:
        Ref: SNSTopic
      RDS_HOST: ${self:custom.AURORA.HOST}
    alarms:
      - functionErrors
    vpc: ${self:custom.vpc}
    events:
      - sns:
          arn:
            Ref: SNSTopic
          topicName: ${self:custom.topicName}
          filterPolicy:
            feed:
              - save_bill
  query_bills:
    handler: bin/query_bills
    timeout: 120
    environment:
      SNS_TOPIC_ARN:
        Ref: SNSTopic
      RDS_HOST: ${self:custom.AURORA.HOST}
    alarms:
      - functionErrors
    vpc: ${self:custom.vpc}
    events:
      - schedule: cron(3 2,14,17,20,23 * * ? *)
  update_bill:
    handler: bin/update_bill
    timeout: 120
    environment:
      SNS_TOPIC_ARN:
        Ref: SNSTopic
    alarms:
      - functionErrors
    events:
      - sns:
          arn:
            Ref: SNSTopic
          topicName: ${self:custom.topicName}
          filterPolicy:
            feed:
              - update_bill

resources:
  Resources:
    SNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:service}-${self:provider.stage}-events
        DisplayName: ChiBillBotEvents
        Tags:
          - Key: project
            Value: ${self:service}-${self:provider.stage}
